// tslint:disable
/**
 * WeatherForecast
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ComplexResponseControllerResponse,
    ComplexResponseControllerResponseFromJSON,
    ComplexResponseControllerResponseToJSON,
    WeatherForecast,
    WeatherForecastFromJSON,
    WeatherForecastToJSON,
} from '../models';

/**
 * no description
 */
export class WeatherForecastApi extends runtime.BaseAPI {

    /**
     */
    async apiV1WeatherForecastComplexGetRaw(): Promise<runtime.ApiResponse<ComplexResponseControllerResponse>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/WeatherForecast/complex`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => ComplexResponseControllerResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiV1WeatherForecastComplexGet(): Promise<ComplexResponseControllerResponse> {
        const response = await this.apiV1WeatherForecastComplexGetRaw();
        return await response.value();
    }

    /**
     */
    async apiV1WeatherForecastGetRaw(): Promise<runtime.ApiResponse<Array<WeatherForecast>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/WeatherForecast`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(WeatherForecastFromJSON));
    }

    /**
     */
    async apiV1WeatherForecastGet(): Promise<Array<WeatherForecast>> {
        const response = await this.apiV1WeatherForecastGetRaw();
        return await response.value();
    }

}
